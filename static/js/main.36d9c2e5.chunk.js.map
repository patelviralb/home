{"version":3,"sources":["components/home/vp-profile-image.jpg","components/navbar/navlink/index.js","components/navbar/navlink/navlink.js","components/navbar/index.js","components/navbar/navbar.js","components/anchor-tag/index.js","components/anchor-tag/anchor-tag.js","components/home/index.js","components/home/home.js","components/page-break/index.js","components/page-break/page-break.js","components/about-me/index.js","components/about-me/about-me.js","components/portfolio/index.js","components/portfolio/portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navlink","props","className","data-toggle","data-target","href","name","Navbar","navbarLinks","useState","bgColor","setBgColor","listenScrollEvent","e","window","scrollY","React","useEffect","addEventListener","type","id","Object","keys","map","eachKey","key","AnchorTag","params","css_class","target","download","icon_class","content","Home","src","vp_profile_image","alt","PageBreak","AboutMe","Portfolio","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36d9c2e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vp-profile-image.e9509129.jpg\";","import Navlink from \"./navlink\";\n\nexport default Navlink;","import React from \"react\";\n\nconst Navlink = (props) => {\n    return (\n        <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n            <a className=\"nav-link text-white\" href={props.href}>{props.name}</a>\n        </li>\n    );\n}\n\nexport default Navlink;","import Navbar from \"./navbar\";\n\nexport default Navbar;","import React, {useState} from \"react\";\n\nimport Navlink from \"./navlink\";\n\nconst Navbar = () => {\n    const navbarLinks = {\n        \"Home\": \"#vp-home\",\n        \"About\": \"#vp-about-me\",\n        /*\"Profiles\": \"#vp-my-social-profiles\",\n        \"Technical Knowledge\": \"#vp-my-technical-knowledge\",\n        \"Work Experience\": \"#vp-my-work-experience\",\n        \"Education\": \"#vp-my-education\",\n        \"Testimonies\": \"#vp-my-testimonies\",\n        \"Projects\": \"#vp-my-projects\",*/\n    };\n\n    const [bgColor, setBgColor] = useState(\"\");\n\n    const listenScrollEvent = e => {\n        if (window.scrollY > 500) {\n            setBgColor(\"bg-primary\")\n        } else {\n            setBgColor(\"\")\n        }\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', listenScrollEvent);\n    }, []);\n\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-primary fixed-top ${bgColor}`}>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\">\n                <i className=\"fas fa-bars text-white\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                <ul className=\"navbar-nav\">\n                    {\n                        Object.keys(navbarLinks).map(eachKey => {\n                            return <Navlink key={eachKey} name={eachKey} href={navbarLinks[eachKey]}/>\n                        })\n                    }\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import AnchorTag from \"./anchor-tag\";\n\nexport default AnchorTag;","import React from \"react\";\n\nconst AnchorTag = (props) => {\n    const params = props.params;\n    return (\n        <a className={params.css_class} href={params.href} target={params.target} download={params.download}>\n            {\n                params.icon_class && <i className={params.icon_class}/>\n            }\n            {\n                params.content && <span>{params.content}</span>\n            }\n        </a>\n    );\n}\n\nexport default AnchorTag;","import Home from \"./home\";\n\nexport default Home;","import React, {Fragment} from \"react\";\n\nimport AnchorTag from \"../anchor-tag\";\n\nimport \"./home-style.css\";\nimport vp_profile_image from \"./vp-profile-image.jpg\";\n\nconst getDataForScreenSizeGreaterThanSmall = () => {\n    return (\n        <div className=\"d-none d-md-block\">\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-lg-4 offset-lg-4 col-10 offset-1\">\n                    <span className=\"vp-home-my-name\">Hey there !</span>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-lg-4 offset-lg-4 col-10 offset-1\">\n                    <span className=\"vp-home-my-name\">I'm Viral Patel</span>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-lg-6 offset-lg-3 col-12\">\n                    <span className=\"vp-home-my-position\">Software Developer & Designer</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst getDataForScreenSizeSmallerThanMedium = () => {\n    return (\n        <div className=\"d-bock d-md-none\">\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-10 offset-1\">\n                    <span className=\"vp-home-my-name-small\">Hey there !</span>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-10 offset-1\">\n                    <span className=\"vp-home-my-name-small\">I'm Viral Patel</span>\n                </div>\n            </div>\n            <div className=\"row mb-4\">\n                <div className=\"d-flex justify-content-center col-12\">\n                    <span className=\"vp-home-my-position-small\">Software Developer & Designer</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst Home = () => {\n    /*const social_links = [\n        {\n            \"css_class\": \"mui-btn mui-btn--fab mui-btn--primary\",\n            \"href\": \"https://www.linkedin.com/in/patelviralb\",\n            \"target\": \"_blank\",\n            \"icon_class\": \"fab fa-linkedin fa-lg\",\n        },\n        {\n            \"css_class\": \"mui-btn mui-btn--fab mui-btn--primary\",\n            \"href\": \"https://www.github.com/patelviralb\",\n            \"target\": \"_blank\",\n            \"icon_class\": \"fab fa-github fa-lg\",\n        },\n        {\n            \"css_class\": \"mui-btn mui-btn--fab mui-btn--primary\",\n            \"href\": \"https://www.facebook.com/viral22/\",\n            \"target\": \"_blank\",\n            \"icon_class\": \"fab fa-facebook fa-lg\",\n        },\n        {\n            \"css_class\": \"mui-btn mui-btn--fab mui-btn--primary\",\n            \"href\": \"https://twitter.com/pviralb\",\n            \"target\": \"_blank\",\n            \"icon_class\": \"fab fa-twitter fa-lg\",\n        },\n    ];*/\n\n    const resume_details = {\n        \"css_class\": \"btn btn-success font-weight-bold shadow rounded text-decoration-none\",\n        \"href\": \"https://github.com/patelviralb/Resume/raw/master/Viral-Patel_Resume.pdf\",\n        \"download\": \"Viral-Patel_Resume.pdf\",\n        \"target\": \"_blank\",\n        \"icon_class\": \"fas fa-cloud-download-alt mr-2\",\n        \"content\": \"DOWNLOAD RESUME\",\n    };\n\n    return (\n        <Fragment>\n            <a id=\"vp-home\"/>\n            <div className=\"vp-home-background-image\">\n                <div className=\"vp-home-content\">\n                    <div className=\"container\">\n                        <div className=\"row mb-4\">\n                            <div className=\"d-flex justify-content-center col-md-4 offset-md-4 col-6 offset-3\">\n                                <img className=\"rounded-circle w-100 h-100\" src={vp_profile_image} alt=\"Hey there ! I'm Viral Patel\"/>\n                            </div>\n                        </div>\n\n                        {getDataForScreenSizeGreaterThanSmall()}\n                        {getDataForScreenSizeSmallerThanMedium()}\n\n                        <div className=\"row mb-4\">\n                            <div className=\"d-flex justify-content-center col-md-6 offset-md-3 col-12\">\n                                <AnchorTag params={resume_details}/>\n                            </div>\n                        </div>\n                        {/*<div className=\"row mb-4\">\n                            <div className=\"d-flex justify-content-center col-md-6 offset-md-3 col-12\">\n                                {\n                                    social_links.map(eachObject => {\n                                        return (\n                                            <AnchorTag key={eachObject.href} params={eachObject}/>\n                                        );\n                                    })\n                                }\n                            </div>\n                        </div>*/}\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Home","import PageBreak from \"./page-break\";\n\nexport default PageBreak;","import React, {Fragment} from \"react\";\n\nimport \"./page-break-style.css\";\n\nconst PageBreak = () => {\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6 offset-md-3\">\n                        <div className=\"box mt-5 mb-5\">\n                            <div className=\"box-sm violet\"/>\n                            <div className=\"box-sm indigo\"/>\n                            <div className=\"box-sm blue\"/>\n                            <div className=\"box-sm green\"/>\n                            <div className=\"box-sm yellow\"/>\n                            <div className=\"box-sm orange\"/>\n                            <div className=\"box-sm red\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default PageBreak;","import AboutMe from \"./about-me\";\n\nexport default AboutMe;","import React, {Fragment} from \"react\";\n\nimport \"./about-me-style.css\";\nimport PageBreak from \"../page-break\";\n\nconst AboutMe = () => {\n    return (\n        <Fragment>\n            <a id=\"vp-about-me\"/>\n            <div className=\"container-fluid mt-5 mt-md-n5\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 offset-md-1 col-12\">\n                        <div className=\"card shadow-lg rounded mt-md-n5\">\n                            <div className=\"card-body text-justify\">\n                                <p className=\"mb-5\">\n                                    <span className=\"vp-about-me-content\">\n                                        I'm Software Engineer learning to make things simple and better. Currently I'm\n                                        Computer Science Graduate Student at Northeastern University, Boston.\n                                    </span>\n                                </p>\n                                <p className=\"mb-5\">\n                                    <span className=\"vp-about-me-content\">\n                                        Before commencing my graduate degree, I was working as a Software Developer\n                                        with nearly 5 years of work experience. Creating a high quality modular code\n                                        which is easier to maintain and extend was one of my considerable\n                                        accomplishments. I also like to continuously challenge myself to innovate and/or\n                                        automate things which helps me and my team to create high quality software\n                                        applications. Being a firm believer of life-long learning, I always try to\n                                        learn through experimentation. As a result, I would often work on some\n                                        personal projects which includes domains like Web Technologies and Cloud\n                                        Computing. Apart from these, I am also interested in applied Machine Learning\n                                        and Artificial Intelligence.\n                                    </span>\n                                </p>\n                                <p className=\"mb-5\">\n                                    <span className=\"vp-about-me-content\">\n                                        During my time-off, you'll find me casually reading books, surfing articles on\n                                        the internet or watching some cartoons, sci-fi series or movies and I like to\n                                        call it my passive learning.\n                                    </span>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <PageBreak/>\n        </Fragment>\n    );\n}\n\nexport default AboutMe;","import Portfolio from \"./portfolio\";\n\nexport default Portfolio;","import React, {Fragment} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport Navbar from \"../navbar\";\nimport Home from \"../home\";\nimport AboutMe from \"../about-me\";\n\nconst Portfolio = () => {\n    return (\n        <Fragment>\n            <Navbar/>\n            <Home/>\n            <AboutMe/>\n        </Fragment>\n    );\n}\n\nexport default Portfolio;","import React from 'react';\nimport './App.css';\n\nimport Portfolio from \"./components/portfolio\";\n\nfunction App() {\n    return (\n        <Portfolio/>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}